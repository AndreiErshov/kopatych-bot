import { EmbedBuilder, SlashCommandBuilder } from 'discord.js';
import { hexStringToNumber } from '../util/functions';
import { SMESHARIKI } from '../util/constants';
import { SlashCommand } from '../modules/CommandManager';
import { random } from '../util/random';

export default {
    data: new SlashCommandBuilder()
        .setName('random')
        .setDescription('–ù–∞–±–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞ –ª—é–±–æ–π —Å–ª—É—á–∞–π –∂–∏–∑–Ω–∏')
        .addStringOption(option => option
            .setName('type')
            .setDescription('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è')
            .addChoices(
                { name: '–¶–≤–µ—Ç (HEX)', value: 'color' },
                { name: '–°–º–µ—à–∞—Ä–∏–∫', value: 'smesharik' },
                { name: '32-–±–∏—Ç–Ω–æ–µ —á–∏—Å–ª–æ', value: 'int32' },
                { name: '–°–ª–æ–≤–æ', value: 'word' },
                { name: '–ü–æ–¥–±—Ä–æ—Å –º–æ–Ω–µ—Ç–∫–∏', value: 'coinflip' },
                { name: '–ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞', value: 'diceroll' },
                { name: '–û—Ü–µ–Ω–∫–∞ (–æ—Ç 2- –¥–æ 5+)', value: 'grade' },
                { name: 'IP-–∞–¥—Ä–µ—Å', value: 'ip' }
            )
        ),
    async execute(interaction) {
        await interaction.deferReply();
        const type = interaction.options.getString('type');
        switch (type) {
            case 'coinflip': {
                const coinflip = random.coinflip();
                const embed = new EmbedBuilder()
                    .setColor(hexStringToNumber(random.color()))
                    .setTitle('ü™ô –ü–æ–¥–±—Ä–æ—Å –º–æ–Ω–µ—Ç–∫–∏')
                    .setDescription(coinflip)
                    .setTimestamp();
                await interaction.editReply({ embeds: [embed] });
                break;
            }
            case 'diceroll': {
                const diceRoll = random.diceRoll();
                const embed = new EmbedBuilder()
                    .setColor(hexStringToNumber(random.color()))
                    .setTitle('üé≤ –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞')
                    .setDescription(`${diceRoll}`)
                    .setTimestamp();
                await interaction.editReply({ embeds: [embed] });
                break;
            }
            case 'grade': {
                const grade = random.grade();
                const embed = new EmbedBuilder()
                    .setColor(hexStringToNumber(random.color()))
                    .setTitle('üìù –û—Ü–µ–Ω–∫–∞')
                    .setDescription(grade)
                    .setTimestamp();
                await interaction.editReply({ embeds: [embed] });
                break;
            }
            case 'int32': {
                const int32 = random.int32();
                const embed = new EmbedBuilder()
                    .setColor(hexStringToNumber(random.color()))
                    .setTitle('üî¢ 32-–±–∏—Ç–Ω–æ–µ —á–∏—Å–ª–æ')
                    .setDescription(int32.toString())
                    .setTimestamp();
                await interaction.editReply({ embeds: [embed] });
                break;
            }
            case 'color': {
                const color = random.color();
                const embed = new EmbedBuilder()
                    .setColor(hexStringToNumber(color))
                    .setTitle('üé® –¶–≤–µ—Ç')
                    .setDescription(color)
                    .setTimestamp();
                await interaction.editReply({ embeds: [embed] });
                break;
            }
            case 'smesharik': {
                const smesharik = random.smesharik();
                const embed = new EmbedBuilder()
                    .setColor(hexStringToNumber(random.color()))
                    .setTitle('üëª –°–º–µ—à–∞—Ä–∏–∫')
                    .setDescription(SMESHARIKI[smesharik].name)
                    .setImage(SMESHARIKI[smesharik].photo)
                    .setTimestamp();
                await interaction.editReply({ embeds: [embed] });
                break;
            }
            case 'word': {
                const word = random.word('ru');
                const embed = new EmbedBuilder()
                    .setColor(hexStringToNumber(random.color()))
                    .setTitle('üìñ –°–ª–æ–≤–æ')
                    .setDescription(`${word}`)
                    .setTimestamp();
                await interaction.editReply({ embeds: [embed] });
                break;
            }
            case 'ip': {
                const ip = random.ip();
                const embed = new EmbedBuilder()
                    .setColor(hexStringToNumber(random.color()))
                    .setTitle('üåê –°–ª—É—á–∞–π–Ω—ã–π IP-–∞–¥—Ä–µ—Å')
                    .setDescription(ip)
                    .setTimestamp();
                await interaction.editReply({ embeds: [embed] });
                break;
            }
            default: {
                const color = random.color(),
                    smesharik = random.smesharik()

                // make embed with all random values
                const embed = new EmbedBuilder()
                    .setColor(hexStringToNumber(color))
                    .setTitle('–í–æ—Ç —Ç–µ–±–µ –ø–∞—Ä–æ—á–∫–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π')
                    .addFields([
                        {
                            name: 'ü™ô –ü–æ–¥–±—Ä–æ—Å –º–æ–Ω–µ—Ç—ã:',
                            value: random.coinflip(),
                            inline: true
                        },
                        {
                            name: 'üé≤ –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞:',
                            value: `${random.diceRoll()}`,
                            inline: true
                        },
                        {
                            name: 'üìù –û—Ü–µ–Ω–∫–∞:',
                            value: random.grade(),
                            inline: true
                        },
                        {
                            name: 'üî¢ –ß–∏—Å–ª–æ (32-–±–∏—Ç–Ω–æ–µ):',
                            value: `${random.int32()}`,
                            inline: true
                        },
                        {
                            name: 'üìñ –°–ª–æ–≤–æ:',
                            value: `${random.word('ru')}`,
                            inline: true
                        },
                        {
                            name: 'üé® –¶–≤–µ—Ç:',
                            value: color,
                            inline: true
                        },
                        {
                            name: 'üåê IP-–∞–¥—Ä–µ—Å:',
                            value: random.ip(),
                            inline: true
                        },
                        {
                            name: 'üëª –°–º–µ—à–∞—Ä–∏–∫:',
                            value: SMESHARIKI[smesharik].name,
                            inline: true
                        }
                    ])
                    .setImage(SMESHARIKI[smesharik].photo)
                    .setTimestamp();
                await interaction.editReply({ embeds: [embed] });
                break;
            }
        }
    }
} satisfies SlashCommand
